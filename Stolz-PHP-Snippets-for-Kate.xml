<snippets namespace="" license="LGPL v2+" filetypes="PHP/PHP;PHP (HTML)" snippetlicense="public domain" authors="Javi (twitter:@Stolz)" name="Stolz PHP Snippets">
 <item>
  <displayprefix></displayprefix>
  <match>php</match>
  <displaypostfix>&lt;?php</displaypostfix>
  <displayarguments></displayarguments>
  <fillin>&lt;?php
${cursor}</fillin>
 </item>
 <item>
  <displayprefix></displayprefix>
  <match>=</match>
  <displaypostfix>&lt;?= ?></displaypostfix>
  <displayarguments></displayarguments>
  <fillin>&lt;?= ${cursor} ?></fillin>
 </item>
 <item>
  <displayprefix></displayprefix>
  <match>class</match>
  <displaypostfix></displaypostfix>
  <displayarguments></displayarguments>
  <fillin>class ${Classname/./\u\0/} {
	${cursor}
}</fillin>
 </item>
 <item>
  <displayprefix></displayprefix>
  <match>class+constructor</match>
  <displaypostfix></displaypostfix>
  <displayarguments></displayarguments>
  <fillin>class ${Classname/./\u\0/} {

	function __construct() {
		${cursor}
	}
}
</fillin>
 </item>
 <item>
  <displayprefix></displayprefix>
  <match>constructor</match>
  <displaypostfix></displaypostfix>
  <displayarguments></displayarguments>
  <fillin>function __construct() {
	${cursor}
}</fillin>
 </item>
 <item>
  <displayprefix></displayprefix>
  <match>function</match>
  <displaypostfix></displaypostfix>
  <displayarguments></displayarguments>
  <fillin>function ${function_name}()
{
	${cursor}
}</fillin>
 </item>
 <item>
  <displayprefix></displayprefix>
  <match>if</match>
  <displaypostfix></displaypostfix>
  <displayarguments></displayarguments>
  <fillin>if(${condition})
{
	${cursor}
}
</fillin>
 </item>
 <item>
  <displayprefix></displayprefix>
  <match>ifelse</match>
  <displaypostfix></displaypostfix>
  <displayarguments></displayarguments>
  <fillin>if(${condition})
{
	${cursor}
}
else
{
	
}</fillin>
 </item>
 <item>
  <displayprefix></displayprefix>
  <match>else</match>
  <displaypostfix></displaypostfix>
  <displayarguments></displayarguments>
  <fillin>else
{
	${cursor}
}</fillin>
 </item>
 <item>
  <displayprefix></displayprefix>
  <match>elseif</match>
  <displaypostfix></displaypostfix>
  <displayarguments></displayarguments>
  <fillin>elseif(${condition})
{
	${cursor}
}</fillin>
 </item>
 <item>
  <displayprefix></displayprefix>
  <match>if</match>
  <displaypostfix>(view)</displaypostfix>
  <displayarguments></displayarguments>
  <fillin>&lt;?php if(${condition}) : ?>
${cursor}
&lt;?php endif ?></fillin>
 </item>
 <item>
  <displayprefix></displayprefix>
  <match>ifelse</match>
  <displaypostfix>(view)</displaypostfix>
  <displayarguments></displayarguments>
  <fillin>&lt;?php if(${condition}) : ?>
${cursor}
&lt;?php else : ?>

&lt;?php endif ?>
</fillin>
 </item>
 <item>
  <displayprefix></displayprefix>
  <match>foreach</match>
  <displaypostfix></displaypostfix>
  <displayarguments></displayarguments>
  <fillin>foreach($%{array} as $key => $value)
{
	${cursor}
}</fillin>
 </item>
 <item>
  <displayprefix></displayprefix>
  <match>foreach</match>
  <displaypostfix>(view)</displaypostfix>
  <displayarguments></displayarguments>
  <fillin>&lt;?php foreach($%{array} as $key => $value) : ?>
${cursor}
&lt;?php endforeach ?></fillin>
 </item>
 <item>
  <displayprefix></displayprefix>
  <match>switch</match>
  <displaypostfix></displaypostfix>
  <displayarguments></displayarguments>
  <fillin>switch(${$variable})
{
	default:
	case 1:
		${cursor}
		break;
}</fillin>
 </item>
 <item>
  <displayprefix></displayprefix>
  <match>for</match>
  <displaypostfix></displaypostfix>
  <displayarguments></displayarguments>
  <fillin>for($i = 1; $i &lt;= 10; $i++)
{
	${cursor}
}</fillin>
 </item>
 <item>
  <displayprefix></displayprefix>
  <match>for</match>
  <displaypostfix>(view)</displaypostfix>
  <displayarguments></displayarguments>
  <fillin>&lt;?php for($i = 1; $i &lt;= 10; $i++) : ?>
	${cursor}
&lt;?php endfor ?></fillin>
 </item>
 <item>
  <displayprefix></displayprefix>
  <match>while</match>
  <displaypostfix></displaypostfix>
  <displayarguments></displayarguments>
  <fillin>while($i &lt;= 10)
{
	${cursor}
}</fillin>
 </item>
 <item>
  <displayprefix></displayprefix>
  <match>while</match>
  <displaypostfix>(view)</displaypostfix>
  <displayarguments></displayarguments>
  <fillin>&lt;?php while($i &lt;= 10) : ?>
	${cursor}
&lt;?php endfor ?></fillin>
 </item>
 <item>
  <displayprefix></displayprefix>
  <match>trycatch</match>
  <displaypostfix></displaypostfix>
  <displayarguments></displayarguments>
  <fillin>try
{
	if(${cursor})
		throw new Exception(_('Error'));
}
catch(Exception $e)
{
	echo $e->getMessage();
}</fillin>
 </item>
 <item>
  <displayprefix></displayprefix>
  <match>trycatchfinally</match>
  <displaypostfix></displaypostfix>
  <displayarguments></displayarguments>
  <fillin>try
{
	if(${cursor})
		throw new Exception(_('Error'));
}
catch(Exception $e)
{
	echo $e->getMessage();
}
finally
{
	
}</fillin>
 </item>
 <item>
  <displayprefix></displayprefix>
  <match>function+docheader</match>
  <displaypostfix></displaypostfix>
  <displayarguments></displayarguments>
  <fillin>/**
 * ${Function readable name}
 *
 * ${Function description}
 *
 * @param  string
 * @param  integer
 * @param  bool
 * @param  mixed
 * @return  void
 */
function ${function_name}()
{
	${cursor}
}</fillin>
 </item>
 <item>
  <displayprefix></displayprefix>
  <match>new</match>
  <displaypostfix>(new stdClass object)</displaypostfix>
  <displayarguments></displayarguments>
  <fillin>%{cursor}$obj = new stdClass();</fillin>
 </item>
 <item>
  <displayprefix></displayprefix>
  <match>array</match>
  <displaypostfix>(1 line)</displaypostfix>
  <displayarguments></displayarguments>
  <fillin>array(%{cursor})</fillin>
 </item>
 <item>
  <displayprefix></displayprefix>
  <match>array</match>
  <displaypostfix>(multi line)</displaypostfix>
  <displayarguments></displayarguments>
  <fillin>array(
	'%{cursor}'	=> 1,
);</fillin>
 </item>
 <item>
  <displayprefix></displayprefix>
  <match>array+var</match>
  <displaypostfix>(1 line)</displaypostfix>
  <displayarguments></displayarguments>
  <fillin>$%{array} = array(%{cursor});</fillin>
 </item>
 <item>
  <displayprefix></displayprefix>
  <match>array+var</match>
  <displaypostfix>(multi line)</displaypostfix>
  <displayarguments></displayarguments>
  <fillin>$%{array} = array(
	'%{cursor}'	=> 1,
);</fillin>
 </item>
 <item>
  <displayprefix></displayprefix>
  <match>this</match>
  <displaypostfix></displaypostfix>
  <displayarguments></displayarguments>
  <fillin>$this->%{cursor};</fillin>
 </item>
 <item>
  <displayprefix></displayprefix>
  <match>new</match>
  <displaypostfix>(other class)</displaypostfix>
  <displayarguments></displayarguments>
  <fillin>$obj = new ${cursor}();</fillin>
 </item>
</snippets>
